********************************************************************************
	U-Boot environments:
********************************************************************************
setenv ethact octeth0
setenv ipaddr 172.16.0.91
setenv netmask 255.255.255.0
setenv gateway 172.16.0.1
setenv serverip 172.16.0.14
saveenv

********************************************************************************
	Update Bootloader
********************************************************************************
Info:
1. Flash Base Address = 0x17C0,0000
2. U-Boot image size < 0x10,0000 (loaded u-boot.bin from SDK-2.3 = 0xC0C20)
3. Save original U-Boot image from 0x17C0,000 => 0x1800,0000

setenv ethact octeth0; tftpboot $(loadaddr) u-boot-octeon_n804.bin
prot off all
erase $(flash_base_addr) + $(filesize)

bootloaderupdate $(loadaddr) $(filesize)
Valid bootloader image found.
Image at 0x20000000 is ready for burning
           Header version: 1.2
           Header size 192, data size 789344
           Header crc 0x1318a88, data crc 0xd3bd1173
           Image link address is 0xffffffffc0000000
           Image burn address on flash is 0x1fc00000
           Image size on flash 0xe0000
....... done
Un-Protected 7 sectors

....... done
Erased 7 sectors
Copy to Flash... done
Octeon cust_n804# 

********************************************************************************
	Run Linux (Kernel + initramfs = single image) from TFTP Server
********************************************************************************
tftpboot $(loadaddr) vmlinux.64.1
bootoctlinux $(loadaddr) numcores=16

--------------------------------------------------------------------------------
setenv ethact octeth0; tftpboot $(loadaddr) vmlinux.64.0; bootoctlinux $(loadaddr) numcores=16


********************************************************************************
	Kernel (vmlinux.64) + Debian Root FS (rootfs.cpio) pre-loaded in Memory
********************************************************************************
freeprint
Block address: 0x0f100020, size: 0x00e3c4e0, next: 0x0fffce40
Block address: 0x0fffce40, size: 0x00000040, next: 0x0fffd6d0
Block address: 0x0fffd6d0, size: 0x00000030, next: 0x30000000
Block address: 0x30000000, size: 0x5f800000, next: 0x00000000

namedalloc myinitrd 27e0000 30000000
tftpboot 30000000 rootfs.cpio.gz
This will print the loaded file size (e.g. 27dd6da)
Use higher value = 27e0000
tftpboot 20000000 vmlinux.64
bootoctlinux 20000000 numcores=8 endbootargs rd_name=myinitrd 2

--------------------------------------------------------------------------------
namedalloc myinitrd 27e0000 30000000; setenv ethact octeth0; tftpboot 30000000 rootfs.cpio.gz; tftpboot 20000000 vmlinux.64; bootoctlinux 20000000 numcores=8 endbootargs rd_name=myinitrd

********************************************************************************
	Debian (tftp) + RootFS (from USB)
********************************************************************************
setenv ethact octeth0
tftpboot $(loadaddr) vmlinux.64.1
bootoctlinux $(loadaddr) numcores=8 mem=0 rootdelay=5 root=/dev/sda2 rw 2

--------------------------------------------------------------------------------
setenv ethact octeth0; tftpboot $(loadaddr) vmlinux.64.1; bootoctlinux $(loadaddr) numcores=8 mem=0 rootdelay=5 root=/dev/sda2 rw

setenv ethact octeth0; tftpboot $(loadaddr) vmlinux.64; bootoctlinux $(loadaddr) numcores=8 rootdelay=5 root=/dev/sda2 rw

setenv ethact octeth0; tftpboot $(loadaddr) vmlinux.64; bootoctlinux $(loadaddr) numcores=8 console=ttyS1,115200n8 rootdelay=5 root=/dev/sda2 rw

tftpboot $(loadaddr) vmlinux.64; bootoctlinux $(loadaddr) numcores=4 rootdelay=5 root=/dev/sda2 rw

********************************************************************************
	Linux (BusyBox)
********************************************************************************
modprobe octeon-ethernet
ifconfig eth0 172.16.0.91 netmask 255.255.255.0
ping 172.16.0.1

--------------------------------------------------------------------------------
modprobe octeon-ethernet; ifconfig eth0 172.16.0.91 netmask 255.255.255.0

********************************************************************************
	Debian + RootFS both from USB
********************************************************************************
usb start
usb info
fatload usb 0:1 $(loadaddr) vmlinux.64
bootoctlinux $(loadaddr) numcores=8 mem=0 rootdelay=5 root=/dev/sda2 rw
bootoctlinux $(loadaddr) coremask=3 mem=0 rootdelay=5 root=/dev/sda2 rw

--------------------------------------------------------------------------------
usb start; fatload usb 0:1 $(loadaddr) vmlinux.64; bootoctlinux $(loadaddr) coremask=f mem=0 rootdelay=5 root=/dev/sda2 rw

********************************************************************************
	Run Forward SE Application from TFTP Server
********************************************************************************
tftpboot $(loadaddr) forward
bootoct $(loadaddr) numcores=16

--------------------------------------------------------------------------------
setenv ethact octeth0; tftpboot $(loadaddr) forward; bootoct $(loadaddr) numcores=16

********************************************************************************
	Linux-Filter Application
********************************************************************************
modprobe octeon-ethernet
modprobe octeon-pow-ethernet receive_group=1 broadcast_groups=4 ptp_rx_group=14 ptp_tx_group=13

insmod ./octeon-ethernet.ko
insmod ./octeon-pow-ethernet.ko receive_group=1 broadcast_groups=4 ptp_rx_group=14 ptp_tx_group=13


********************************************************************************
	Linux-Forward Application
********************************************************************************
modprobe octeon-ethernet
ifconfig eth2 promisc up
ifconfig eth3 promisc up
./filter
./hbtool set --segment=1 --current-mode=2|4

--------------------------------------------------------------------------------
usb start; fatload usb 0:1 $(loadaddr) vmlinux.64; bootoctlinux $(loadaddr) numcores=8 rootdelay=5 root=/dev/sda2 rw

usb start; fatload usb 0 $(loadaddr) vmlinux.64; bootoctlinux $(loadaddr) numcores=8 rootdelay=10 root=/dev/sda2 rw

ifconfig eth2 promisc up; ifconfig eth3 promisc up

